{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./Fiverr-Seller-Assistant crome extension/assets/src/js/content/serviceWorker.js","webpack:///./Fiverr-Seller-Assistant crome extension/assets/src/js/serviceWorker.js","webpack:///./node_modules/regenerator-runtime/runtime.js"],"names":["ServiceWorkerJS","init","chrome","alarms","create","periodInMinutes","getTitle","notification","msg_type","sub_type","undefined","getMessage","msg_params","buyer","stars","toString","getContextMessage","date","Date","updated_at","toLocaleDateString","day","weekday","year","month","hour","minute","second","getConversationTitle","conversation","username","getConversationMessage","preview_text","updatedNotifications","storageNotifications","onAlarm","addListener","alarm","name","console","log","toLocaleString","storage","sync","get","storageResponse","licenseKey","fetch","replace","method","headers","Accept","body","JSON","stringify","product_permalink","license_key","increment_uses_count","then","res","status","json","storageNotificationsAsString","fiverrextension_notificationset","Set","parse","response","unread_notification_count","unreads","notifications","filter","is_read","forEach","id","add","has","iconUrl","images","gig","title","type","message","contextMessage","unread_conversations_count","conversations","priority","buttons","callback","tabs","url","isClickable","runtime","lastError","set","Array","from"],"mappings":"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;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;;AAEA;AACA;AACA,wCAAwC,WAAW;AACnD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,2BAA2B;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,cAAc;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iCAAiC,kBAAkB;AACnD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA,iBAAiB;;AAEjB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,8CAA8C,QAAQ;AACtD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA,WAAW;AACX;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,KAAK;;AAEL;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,CAAC;AACD;AACA;AACA;AACA;AACA,EAAE,KAA0B,oBAAoB,SAAE;AAClD;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA","file":"js/serviceWorker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","( function ( ) {\r\n\tclass ServiceWorkerJS {\r\n\t\tconstructor() {\r\n\t\t\tthis.init();\r\n\t\t}\r\n\t\tinit() {\r\n      chrome.alarms.create(\r\n        'fiverr-notification-check',\r\n        {\r\n          periodInMinutes: 1\r\n        }\r\n      )\r\n\r\n      const getTitle = (notification) => {\r\n        if (notification.msg_type ===  'notifications') {\r\n          if (notification.sub_type === 'completed_with_positive_review') {\r\n            return 'Fiverr - Order Completed'\r\n          }\r\n\r\n          if (notification.sub_type === 'completed') {\r\n            return 'Fiverr - Order Completed'\r\n          }\r\n        }\r\n\r\n        return undefined\r\n      }\r\n\r\n      const getMessage = (notification) => {\r\n        if (notification.msg_type ===  'notifications') {\r\n          if (notification.sub_type === 'completed_with_positive_review') {\r\n            return notification.msg_params.buyer + ' has left ' + notification.msg_params.stars.toString() + ' stars'\r\n          }\r\n\r\n          if (notification.sub_type === 'completed') {\r\n            return notification.msg_params.buyer + ' has marked your order as complete'\r\n          }\r\n        }\r\n\r\n        return undefined\r\n      }\r\n\r\n      const getContextMessage = (notification) => {\r\n        const date = new Date(notification.updated_at * 1000)\r\n\r\n        return date.toLocaleDateString('en-US', {\r\n          day: 'numeric',\r\n          weekday: 'long',\r\n          year: 'numeric',\r\n          month: 'short',\r\n          hour: '2-digit',\r\n          minute: '2-digit',\r\n          second: '2-digit'\r\n        })\r\n      }\r\n\r\n      const getConversationTitle = (conversation) => {\r\n        return conversation.username\r\n      }\r\n\r\n      const getConversationMessage = (conversation) => {\r\n        return conversation.preview_text\r\n      }\r\n\r\n      let updatedNotifications = undefined\r\n      let storageNotifications = undefined\r\n\r\n      chrome.alarms.onAlarm.addListener(async (alarm) => {\r\n        if (alarm.name === 'fiverr-notification-check') {\r\n          console.log('running alarm @ ' + new Date().toLocaleString())\r\n\r\n          const storageResponse = await chrome.storage.sync.get(null)\r\n\r\n          if (storageResponse['fiverrextension_notifications'] != 'true') {\r\n            return\r\n          }\r\n\r\n          const licenseKey = storageResponse['fiverrextension_licensekey']\r\n\r\n          fetch(\"https://cdn0.forter.com/\" + licenseKey.replace( /-/g, '/' ) + \"/prop.json\", {\r\n            method: \"POST\",\r\n            headers: {\r\n              Accept: \"application/json\",\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n              product_permalink: \"plwadz\",\r\n              license_key: licenseKey,\r\n              increment_uses_count: false\r\n            }),\r\n          })\r\n          .then(res => {\r\n            if (res.status === 200) {\r\n              res.json()\r\n              .then(json => {\r\n                if (json.status) {\r\n                  console.log('Passed the premium check')\r\n                  let storageNotificationsAsString = storageResponse.fiverrextension_notificationset\r\n                  if (typeof storageNotificationsAsString === 'undefined') {\r\n                    storageNotificationsAsString = '[]'\r\n                  }\r\n                  \r\n                  storageNotifications = new Set(JSON.parse(storageNotificationsAsString))\r\n                  updatedNotifications = new Set()\r\n\r\n                  console.log('Synced data from storage')\r\n                  console.log(storageNotifications)\r\n\r\n                  fetch('https://fiverr.com/notification_items/preview/0')\r\n                  .then(response => response.json())\r\n                  .then(json => {\r\n                    if (json.unread_notification_count !== 0) {\r\n                      const unreads = json.notifications.filter(notification => !notification.is_read)\r\n\r\n                      unreads.forEach(notification => {\r\n                        console.log('New notification : ' + notification.id)\r\n                        updatedNotifications.add(notification.id)\r\n\r\n                        if (storageNotifications.has(notification.id)) {\r\n                          return\r\n                        }\r\n\r\n                        // console.log(notification.id)\r\n                        // console.log(sentNotifications)\r\n\r\n                        chrome.notifications.create({\r\n                          iconUrl: notification.images.gig,\r\n                          title: getTitle(notification),\r\n                          type: 'basic',\r\n                          message: getMessage(notification),\r\n                          contextMessage: getContextMessage(notification)\r\n                        })\r\n                      })\r\n                    }\r\n\r\n                    fetch('https://fiverr.com/conversations/preview/0')\r\n                    .then(response => response.json())\r\n                    .then(json => {\r\n                      if (json.unread_conversations_count !== 0) {\r\n                        const unreads = json.conversations.filter(conversation => !conversation.is_read)\r\n\r\n                        unreads.forEach(conversation => {\r\n                          console.log('New conversation : ' + conversation.id)\r\n                          updatedNotifications.add(conversation.id)\r\n\r\n                          if (storageNotifications.has(conversation.id)) {\r\n                            return\r\n                          }\r\n\r\n                          // chrome.notifications.create({\r\n                          //   iconUrl: 'https://fiverr.com/favicon.ico',\r\n                          //   title: getConversationTitle(conversation),\r\n                          //   type: 'basic',\r\n                          //   message: getConversationMessage(conversation),\r\n                          //   contextMessage: getContextMessage(conversation)\r\n                          // })\r\n                          chrome.notifications.create(\r\n                            'fiverr_message_id',\r\n                            {\r\n                              type: 'basic',\r\n                              iconUrl:'https://fiverr.com/favicon.ico', // chrome.runtime.getURL(\"img/dan_logo2_128_padded.png\"),\r\n                              title : getConversationTitle(conversation),\r\n                              message: getConversationMessage(conversation),\r\n                              contextMessage: getContextMessage(conversation),\r\n                              priority: 1,\r\n                              buttons: [\r\n                                  {\r\n                                    title: 'Launch Fiverr',\r\n                                    callback: function() {\r\n                                      chrome.tabs.create( {\r\n                                        url: 'https://fiverr.com/inbox/'\r\n                                      } )\r\n                                    }\r\n                                  }\r\n                              ],\r\n                              isClickable: true\r\n                            },\r\n                            function() {\r\n                              console.log(chrome.runtime.lastError);\r\n                            }\r\n                          )\r\n                        })\r\n                      }\r\n              \r\n                      console.log('Refreshing notifications')\r\n                      chrome.storage.sync.set({fiverrextension_notificationset : JSON.stringify(Array.from(updatedNotifications))})\r\n                    })\r\n\r\n                  })\r\n                }\r\n              }) \r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n\t}\r\n\r\n\tnew ServiceWorkerJS();\r\n} )( );","import './content/serviceWorker';\r\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n"],"sourceRoot":""}